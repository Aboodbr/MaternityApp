Index: lib/presentation/forgot_password/reset_password_view.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\r\nimport 'package:google_fonts/google_fonts.dart';\r\nimport 'package:maternity_app/presentation/login/login_view.dart';\r\nimport 'package:maternity_app/presentation/resources/color_manager.dart';\r\nimport 'package:maternity_app/validation.dart';\r\n\r\nclass ResetPasswordView extends StatefulWidget {\r\n  const ResetPasswordView({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<ResetPasswordView> createState() => _ResetPasswordViewState();\r\n}\r\n\r\nclass _ResetPasswordViewState extends State<ResetPasswordView> {\r\n  final _formKey = GlobalKey<FormState>();\r\n  final TextEditingController _newPasswordController = TextEditingController();\r\n  final TextEditingController _confirmPasswordController = TextEditingController();\r\n  bool _isNewPasswordVisible = false;\r\n  bool _isConfirmPasswordVisible = false;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final double screenHeight = MediaQuery.of(context).size.height;\r\n    final double screenWidth = MediaQuery.of(context).size.width;\r\n\r\n    return Scaffold(\r\n      body: Container(\r\n        decoration: const BoxDecoration(\r\n          image: DecorationImage(\r\n            image: AssetImage('assets/images/Sign_In.png'), // Replace with your image asset\r\n            fit: BoxFit.cover,\r\n          ),\r\n        ),\r\n        child: SafeArea(\r\n          child: Column(\r\n            crossAxisAlignment: CrossAxisAlignment.start,\r\n            children: [\r\n              AppBar(\r\n                backgroundColor: Colors.transparent,\r\n                elevation: 0,\r\n                centerTitle: true,\r\n                leading: GestureDetector(\r\n                  onTap: () {\r\n                    Navigator.pop(context);\r\n                  },\r\n                  child: const Icon(\r\n                    Icons.arrow_back_ios_new_sharp,\r\n                    color: Colors.black,\r\n                  ),\r\n                ),\r\n                title: Row(\r\n                  mainAxisSize: MainAxisSize.min,\r\n                  children: [\r\n                    Image.asset(\r\n                      'assets/images/logo2.png', // Replace with your logo asset\r\n                      height: screenHeight * 0.08,\r\n                      width: screenWidth * 0.1,\r\n                    ),\r\n                    SizedBox(width: screenWidth * 0.02),\r\n                    Text(\r\n                      'Mamativity',\r\n                      style: GoogleFonts.inriaSerif(\r\n                        textStyle: TextStyle(\r\n                          fontSize: screenWidth * 0.05,\r\n                          fontWeight: FontWeight.bold,\r\n                          color: Colors.black,\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ],\r\n                ),\r\n              ),\r\n              SizedBox(height: screenHeight * 0.06),\r\n\r\n              Center(\r\n                child: Text(\r\n                  'Reset your password',\r\n                  style: GoogleFonts.inriaSerif(\r\n                    textStyle: TextStyle(\r\n                      fontSize: screenWidth * 0.08,\r\n                      fontWeight: FontWeight.bold,\r\n                      color: Colors.black,\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n              SizedBox(height: screenHeight * 0.02),\r\n\r\n              Center(\r\n                child: Text(\r\n                  'The password must be different\\nthan before',\r\n                  textAlign: TextAlign.center,\r\n                  style: GoogleFonts.inriaSerif(\r\n                    textStyle: TextStyle(\r\n                      fontSize: screenWidth * 0.04,\r\n                      fontWeight: FontWeight.w400,\r\n                      color: Colors.black54,\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n              SizedBox(height: screenHeight * 0.04),\r\n\r\n              Expanded(\r\n                child: Container(\r\n                  padding: EdgeInsets.symmetric(horizontal: screenWidth * 0.08),\r\n                  child: SingleChildScrollView(\r\n                    child: Form(\r\n                      key: _formKey,\r\n                      child: Column(\r\n                        crossAxisAlignment: CrossAxisAlignment.stretch,\r\n                        children: [\r\n                          // New Password Field\r\n                          TextFormField(\r\n                            controller: _newPasswordController,\r\n                            obscureText: !_isNewPasswordVisible,\r\n                            decoration: InputDecoration(\r\n                              labelText: 'New Password',\r\n                              labelStyle: GoogleFonts.inriaSerif(\r\n                                textStyle: TextStyle(\r\n                                  fontSize: screenWidth * 0.04,\r\n                                  color: ColorManager.txtEditor_font_color,\r\n                                ),\r\n                              ),\r\n                              suffixIcon: IconButton(\r\n                                icon: Icon(\r\n                                  _isNewPasswordVisible\r\n                                      ? Icons.visibility\r\n                                      : Icons.visibility_off,\r\n                                  color: Colors.grey,\r\n                                ),\r\n                                onPressed: () {\r\n                                  setState(() {\r\n                                    _isNewPasswordVisible = !_isNewPasswordVisible;\r\n                                  });\r\n                                },\r\n                              ),\r\n                            ),\r\n                            validator: (value) => InputValidator.validatePassword(value),\r\n                          ),\r\n                          SizedBox(height: screenHeight * 0.02),\r\n\r\n                          // Confirm Password Field\r\n                          TextFormField(\r\n                            controller: _confirmPasswordController,\r\n                            obscureText: !_isConfirmPasswordVisible,\r\n                            decoration: InputDecoration(\r\n                              labelText: 'Confirm Password',\r\n                              labelStyle: GoogleFonts.inriaSerif(\r\n                                textStyle: TextStyle(\r\n                                  fontSize: screenWidth * 0.04,\r\n                                  color: ColorManager.txtEditor_font_color,\r\n                                ),\r\n                              ),\r\n                              suffixIcon: IconButton(\r\n                                icon: Icon(\r\n                                  _isConfirmPasswordVisible\r\n                                      ? Icons.visibility\r\n                                      : Icons.visibility_off,\r\n                                  color: Colors.grey,\r\n                                ),\r\n                                onPressed: () {\r\n                                  setState(() {\r\n                                    _isConfirmPasswordVisible = !_isConfirmPasswordVisible;\r\n                                  });\r\n                                },\r\n                              ),\r\n                            ),\r\n                            validator: (value) {\r\n                              if (value != _newPasswordController.text) {\r\n                                return 'Passwords do not match';\r\n                              }\r\n                              return null;\r\n                            },\r\n                          ),\r\n                          SizedBox(height: screenHeight * 0.3),\r\n\r\n                          Row(\r\n                            children: [\r\n                              Text(\r\n                                'Next',\r\n                                style: GoogleFonts.inriaSerif(\r\n                                  textStyle: TextStyle(\r\n                                    fontSize: screenWidth * 0.06,\r\n                                    fontWeight: FontWeight.bold,\r\n                                    color: Colors.black,\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                              const Spacer(),\r\n                              GestureDetector(\r\n                                onTap: () {\r\n                                  if (_formKey.currentState?.validate() ?? false) {\r\n                                    Navigator.push(\r\n                                      context,\r\n                                      MaterialPageRoute(\r\n                                        builder: (context) => const LoginView(),\r\n                                      ),\r\n                                    );\r\n                                    ScaffoldMessenger.of(context).showSnackBar(\r\n                                      const SnackBar(content: Text('Password reset successfully.')),\r\n                                    );\r\n                                  }\r\n                                },\r\n                                child: Container(\r\n                                  decoration: const BoxDecoration(\r\n                                    shape: BoxShape.circle,\r\n                                    gradient: LinearGradient(\r\n                                      colors: [\r\n                                        Color(0xFFB6E8F8), // Light Blue\r\n                                        Color(0xFF90CAF9), // Sky Blue\r\n                                      ],\r\n                                      begin: Alignment.topLeft,\r\n                                      end: Alignment.bottomRight,\r\n                                    ),\r\n                                  ),\r\n                                  \r\n                                  padding: EdgeInsets.all(screenWidth * 0.06),\r\n                                  child: Icon(\r\n                                    Icons.arrow_forward,\r\n                                    color: Colors.black,\r\n                                    size: screenWidth * 0.06,\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                            ],\r\n                          ),\r\n                        ],\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n              SizedBox(height: screenHeight * 0.05),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/presentation/forgot_password/reset_password_view.dart b/lib/presentation/forgot_password/reset_password_view.dart
--- a/lib/presentation/forgot_password/reset_password_view.dart	(revision f577e062c93ffa48ec73fd104cda215ef0010cb8)
+++ b/lib/presentation/forgot_password/reset_password_view.dart	(date 1735366152984)
@@ -214,7 +214,7 @@
                                       end: Alignment.bottomRight,
                                     ),
                                   ),
-                                  
+
                                   padding: EdgeInsets.all(screenWidth * 0.06),
                                   child: Icon(
                                     Icons.arrow_forward,
Index: ios/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/.gitignore b/ios/.gitignore
new file mode 100644
--- /dev/null	(date 1735366153003)
+++ b/ios/.gitignore	(date 1735366153003)
@@ -0,0 +1,34 @@
+**/dgph
+*.mode1v3
+*.mode2v3
+*.moved-aside
+*.pbxuser
+*.perspectivev3
+**/*sync/
+.sconsign.dblite
+.tags*
+**/.vagrant/
+**/DerivedData/
+Icon?
+**/Pods/
+**/.symlinks/
+profile
+xcuserdata
+**/.generated/
+Flutter/App.framework
+Flutter/Flutter.framework
+Flutter/Flutter.podspec
+Flutter/Generated.xcconfig
+Flutter/ephemeral/
+Flutter/app.flx
+Flutter/app.zip
+Flutter/flutter_assets/
+Flutter/flutter_export_environment.sh
+ServiceDefinitions.json
+Runner/GeneratedPluginRegistrant.*
+
+# Exceptions to above rules.
+!default.mode1v3
+!default.mode2v3
+!default.pbxuser
+!default.perspectivev3
Index: android/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/.gitignore b/android/.gitignore
new file mode 100644
--- /dev/null	(date 1735366152992)
+++ b/android/.gitignore	(date 1735366152992)
@@ -0,0 +1,13 @@
+gradle-wrapper.jar
+/.gradle
+/captures/
+/gradlew
+/gradlew.bat
+/local.properties
+GeneratedPluginRegistrant.java
+
+# Remember to never publicly share your keystore.
+# See https://flutter.dev/docs/deployment/android#reference-the-keystore-from-the-app
+key.properties
+**/*.keystore
+**/*.jks
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1735366153034)
+++ b/.gitignore	(date 1735366153034)
@@ -0,0 +1,43 @@
+# Miscellaneous
+*.class
+*.log
+*.pyc
+*.swp
+.DS_Store
+.atom/
+.buildlog/
+.history
+.svn/
+migrate_working_dir/
+
+# IntelliJ related
+*.iml
+*.ipr
+*.iws
+.idea/
+
+# The .vscode folder contains launch configuration and tasks you configure in
+# VS Code which you may wish to be included in version control, so this line
+# is commented out by default.
+#.vscode/
+
+# Flutter/Dart/Pub related
+**/doc/api/
+**/ios/Flutter/.last_build_id
+.dart_tool/
+.flutter-plugins
+.flutter-plugins-dependencies
+.pub-cache/
+.pub/
+/build/
+
+# Symbolication related
+app.*.symbols
+
+# Obfuscation related
+app.*.map.json
+
+# Android Studio will place build artifacts here
+/android/app/debug
+/android/app/profile
+/android/app/release
Index: linux/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/.gitignore b/linux/.gitignore
new file mode 100644
--- /dev/null	(date 1735366153028)
+++ b/linux/.gitignore	(date 1735366153028)
@@ -0,0 +1,1 @@
+flutter/ephemeral
Index: macos/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/macos/.gitignore b/macos/.gitignore
new file mode 100644
--- /dev/null	(date 1735366153020)
+++ b/macos/.gitignore	(date 1735366153020)
@@ -0,0 +1,7 @@
+# Flutter-related
+**/Flutter/ephemeral/
+**/Pods/
+
+# Xcode-related
+**/dgph
+**/xcuserdata/
Index: windows/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/.gitignore b/windows/.gitignore
new file mode 100644
--- /dev/null	(date 1735366153012)
+++ b/windows/.gitignore	(date 1735366153012)
@@ -0,0 +1,17 @@
+flutter/ephemeral/
+
+# Visual Studio user-specific files.
+*.suo
+*.user
+*.userosscache
+*.sln.docstates
+
+# Visual Studio build-related files.
+x64/
+x86/
+
+# Visual Studio cache files
+# files ending in .cache can be ignored
+*.[Cc]ache
+# but keep track of directories ending in .cache
+!*.[Cc]ache/
